#!/bin/bash

# Colors for output
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m' # No Color

# Get the directory of the script
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

echo -e "${GREEN}🔧 Manual Setup Helper for P-Bot Backend${NC}"
echo -e "${YELLOW}This script will help you manually set up your environment if the automatic setup failed.${NC}"
echo ""

# Check if we're in a virtual environment
if [ -z "$VIRTUAL_ENV" ]; then
    echo -e "${YELLOW}No virtual environment detected. Creating and activating a new one...${NC}"
    python3 -m venv venv
    source venv/bin/activate
    echo -e "${GREEN}✅ Virtual environment created and activated.${NC}"
else
    echo -e "${GREEN}✅ Already in a virtual environment: $VIRTUAL_ENV${NC}"
fi

# Find the Agno framework
echo -e "${YELLOW}Searching for Agno framework code...${NC}"

PARENT_DIR="$(dirname "$SCRIPT_DIR")"
ROOT_DIR="$(dirname "$PARENT_DIR")"
FRAMEWORK_DIR="$ROOT_DIR/framework"

POSSIBLE_PATHS=(
    "$FRAMEWORK_DIR/agno"
    "$FRAMEWORK_DIR/agno/libs/agno"
    "$FRAMEWORK_DIR/adk-python"
)

FOUND_PATHS=()

for path in "${POSSIBLE_PATHS[@]}"; do
    if [ -d "$path" ]; then
        FOUND_PATHS+=("$path")
        echo -e "${GREEN}✅ Found potential framework path: $path${NC}"
    fi
done

if [ ${#FOUND_PATHS[@]} -eq 0 ]; then
    echo -e "${RED}❌ Could not find any framework directories.${NC}"
    exit 1
fi

# If we found more than one path, ask the user to select one
SELECTED_PATH=""
if [ ${#FOUND_PATHS[@]} -gt 1 ]; then
    echo -e "${YELLOW}Multiple possible framework paths found. Please select one:${NC}"
    for i in "${!FOUND_PATHS[@]}"; do
        echo -e "  ${GREEN}$i${NC}: ${FOUND_PATHS[$i]}"
    done
    
    read -p "Enter selection number: " SELECTION
    SELECTED_PATH="${FOUND_PATHS[$SELECTION]}"
else
    SELECTED_PATH="${FOUND_PATHS[0]}"
fi

echo -e "${GREEN}Selected framework path: $SELECTED_PATH${NC}"

# Try to install dependencies
echo -e "${YELLOW}Installing dependencies...${NC}"
pip install -r requirements.txt
if [ $? -ne 0 ]; then
    echo -e "${RED}❌ Failed to install dependencies.${NC}"
else
    echo -e "${GREEN}✅ Dependencies installed.${NC}"
fi

# Create a script to set PYTHONPATH and run the server
RUNNER_SCRIPT="$SCRIPT_DIR/run_with_pythonpath.sh"
echo "#!/bin/bash" > "$RUNNER_SCRIPT"
echo "" >> "$RUNNER_SCRIPT"
echo "# This script was generated by manually_setup_env.sh" >> "$RUNNER_SCRIPT"
echo "# It sets the PYTHONPATH to include the Agno framework" >> "$RUNNER_SCRIPT"
echo "" >> "$RUNNER_SCRIPT"
echo "# Activate the virtual environment" >> "$RUNNER_SCRIPT"
echo "source \"$SCRIPT_DIR/venv/bin/activate\"" >> "$RUNNER_SCRIPT"
echo "" >> "$RUNNER_SCRIPT"
echo "# Set PYTHONPATH to include the framework" >> "$RUNNER_SCRIPT"
echo "export PYTHONPATH=\"$SELECTED_PATH:\$PYTHONPATH\"" >> "$RUNNER_SCRIPT"
echo "" >> "$RUNNER_SCRIPT"
echo "# Run the server" >> "$RUNNER_SCRIPT"
echo "cd \"$SCRIPT_DIR\"" >> "$RUNNER_SCRIPT"
echo "echo \"Starting server with PYTHONPATH=$SELECTED_PATH\"" >> "$RUNNER_SCRIPT"
echo "uvicorn main:app --reload" >> "$RUNNER_SCRIPT"

chmod +x "$RUNNER_SCRIPT"

echo -e "${GREEN}✅ Created runner script: $RUNNER_SCRIPT${NC}"
echo -e "${YELLOW}You can now start the server with:${NC}"
echo -e "${GREEN}./run_with_pythonpath.sh${NC}"
echo ""
echo -e "${YELLOW}Do you want to run it now? (y/N)${NC}"
read -n 1 RUN_NOW
if [[ $RUN_NOW =~ ^[Yy]$ ]]; then
    echo ""
    echo -e "${GREEN}Starting server...${NC}"
    "$RUNNER_SCRIPT"
else
    echo ""
    echo -e "${YELLOW}You can run the server later with:${NC}"
    echo -e "${GREEN}./run_with_pythonpath.sh${NC}"
fi 